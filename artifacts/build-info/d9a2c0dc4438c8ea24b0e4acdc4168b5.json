{
	"id": "d9a2c0dc4438c8ea24b0e4acdc4168b5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Smart Wallet.sol": {
				"content": "pragma solidity ^0.6.0;\r\n\r\ncontract SmartWallet {\r\n\r\n    mapping(address => uint) Balance;\r\n\r\n    address payable public owner;\r\n\r\n    event RecievedMoney(address _address, uint _amount);\r\n\r\n    uint private funds;\r\n\r\n    bool register; \r\n    \r\n\r\n    constructor() public {\r\n        owner = msg.sender;  \r\n    }\r\n\r\n    fallback() payable external {\r\n        emit RecievedMoney(msg.sender, msg.value / 1 ether);\r\n        funds += msg.value;\r\n    }\r\n\r\n    function Register() public returns(bool) {\r\n        Balance[msg.sender] = 20;\r\n        Balance[owner] = funds;\r\n        return register = true;\r\n    }\r\n\r\n    function WithdrawMoney(uint _amount) payable public {\r\n        require(register == true, \"You are not registered\");\r\n        require(Balance[msg.sender] >= _amount, \"Not enough remaining money on wallet\");\r\n        require(funds >= _amount, \"Not enough funds on wallet\");\r\n        assert(funds - _amount <= funds);\r\n        assert(Balance[msg.sender] - _amount <= Balance[msg.sender]);\r\n        payable(msg.sender).transfer(_amount * 1 ether);\r\n        Balance[msg.sender] -= _amount;\r\n        funds -= _amount;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Smart Wallet.sol": {
				"SmartWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "RecievedMoney",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "Register",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Smart Wallet.sol\":27:1133  contract SmartWallet {\r... */\n  mstore(0x40, 0x80)\n    /* \"Smart Wallet.sol\":251:311  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Smart Wallet.sol\":291:301  msg.sender */\n  caller\n    /* \"Smart Wallet.sol\":283:288  owner */\n  0x01\n  0x00\n    /* \"Smart Wallet.sol\":283:301  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Smart Wallet.sol\":27:1133  contract SmartWallet {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Smart Wallet.sol\":27:1133  contract SmartWallet {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x19e5bf3a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfb8299b0\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"Smart Wallet.sol\":363:409  RecievedMoney(msg.sender, msg.value / 1 ether) */\n      0xc3c5fffb3c0f24b3bc590d2c32d22157634000403cdc35bbe4169569797976e6\n        /* \"Smart Wallet.sol\":377:387  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":401:408  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Smart Wallet.sol\":389:398  msg.value */\n      callvalue\n        /* \"Smart Wallet.sol\":389:408  msg.value / 1 ether */\n      dup2\n      tag_8\n      jumpi\n      invalid\n    tag_8:\n      div\n        /* \"Smart Wallet.sol\":363:409  RecievedMoney(msg.sender, msg.value / 1 ether) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Smart Wallet.sol\":429:438  msg.value */\n      callvalue\n        /* \"Smart Wallet.sol\":420:425  funds */\n      0x02\n      0x00\n        /* \"Smart Wallet.sol\":420:438  funds += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Smart Wallet.sol\":27:1133  contract SmartWallet {\r... */\n      stop\n        /* \"Smart Wallet.sol\":454:604  function Register() public returns(bool) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Smart Wallet.sol\":98:126  address payable public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Smart Wallet.sol\":612:1130  function WithdrawMoney(uint _amount) payable public {\r... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Smart Wallet.sol\":454:604  function Register() public returns(bool) {\r... */\n    tag_11:\n        /* \"Smart Wallet.sol\":489:493  bool */\n      0x00\n        /* \"Smart Wallet.sol\":528:530  20 */\n      0x14\n        /* \"Smart Wallet.sol\":506:513  Balance */\n      0x00\n        /* \"Smart Wallet.sol\":506:525  Balance[msg.sender] */\n      dup1\n        /* \"Smart Wallet.sol\":514:524  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":506:525  Balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Smart Wallet.sol\":506:530  Balance[msg.sender] = 20 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Smart Wallet.sol\":558:563  funds */\n      sload(0x02)\n        /* \"Smart Wallet.sol\":541:548  Balance */\n      0x00\n        /* \"Smart Wallet.sol\":541:555  Balance[owner] */\n      dup1\n        /* \"Smart Wallet.sol\":549:554  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Smart Wallet.sol\":541:555  Balance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Smart Wallet.sol\":541:563  Balance[owner] = funds */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Smart Wallet.sol\":592:596  true */\n      0x01\n        /* \"Smart Wallet.sol\":581:589  register */\n      0x03\n      0x00\n        /* \"Smart Wallet.sol\":581:596  register = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n        /* \"Smart Wallet.sol\":574:596  return register = true */\n      swap1\n      pop\n        /* \"Smart Wallet.sol\":454:604  function Register() public returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Smart Wallet.sol\":98:126  address payable public owner */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Smart Wallet.sol\":612:1130  function WithdrawMoney(uint _amount) payable public {\r... */\n    tag_17:\n        /* \"Smart Wallet.sol\":695:699  true */\n      0x01\n        /* \"Smart Wallet.sol\":683:699  register == true */\n      iszero\n      iszero\n        /* \"Smart Wallet.sol\":683:691  register */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Smart Wallet.sol\":683:699  register == true */\n      iszero\n      iszero\n      eq\n        /* \"Smart Wallet.sol\":675:726  require(register == true, \"You are not registered\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520617265206e6f74207265676973746572656400000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"Smart Wallet.sol\":768:775  _amount */\n      dup1\n        /* \"Smart Wallet.sol\":745:752  Balance */\n      0x00\n        /* \"Smart Wallet.sol\":745:764  Balance[msg.sender] */\n      dup1\n        /* \"Smart Wallet.sol\":753:763  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":745:764  Balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Smart Wallet.sol\":745:775  Balance[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"Smart Wallet.sol\":737:816  require(Balance[msg.sender] >= _amount, \"Not enough remaining money on wallet\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4d1196ed490f5543b658f98eb35ee12d8f8caae3c07eb3daa683bcdca46d2b36\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"Smart Wallet.sol\":844:851  _amount */\n      dup1\n        /* \"Smart Wallet.sol\":835:840  funds */\n      sload(0x02)\n        /* \"Smart Wallet.sol\":835:851  funds >= _amount */\n      lt\n      iszero\n        /* \"Smart Wallet.sol\":827:882  require(funds >= _amount, \"Not enough funds on wallet\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420656e6f7567682066756e6473206f6e2077616c6c6574000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"Smart Wallet.sol\":919:924  funds */\n      sload(0x02)\n        /* \"Smart Wallet.sol\":908:915  _amount */\n      dup2\n        /* \"Smart Wallet.sol\":900:905  funds */\n      sload(0x02)\n        /* \"Smart Wallet.sol\":900:915  funds - _amount */\n      sub\n        /* \"Smart Wallet.sol\":900:924  funds - _amount <= funds */\n      gt\n      iszero\n        /* \"Smart Wallet.sol\":893:925  assert(funds - _amount <= funds) */\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n        /* \"Smart Wallet.sol\":976:983  Balance */\n      0x00\n        /* \"Smart Wallet.sol\":976:995  Balance[msg.sender] */\n      dup1\n        /* \"Smart Wallet.sol\":984:994  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":976:995  Balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Smart Wallet.sol\":965:972  _amount */\n      dup2\n        /* \"Smart Wallet.sol\":943:950  Balance */\n      0x00\n        /* \"Smart Wallet.sol\":943:962  Balance[msg.sender] */\n      dup1\n        /* \"Smart Wallet.sol\":951:961  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":943:962  Balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Smart Wallet.sol\":943:972  Balance[msg.sender] - _amount */\n      sub\n        /* \"Smart Wallet.sol\":943:995  Balance[msg.sender] - _amount <= Balance[msg.sender] */\n      gt\n      iszero\n        /* \"Smart Wallet.sol\":936:996  assert(Balance[msg.sender] - _amount <= Balance[msg.sender]) */\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"Smart Wallet.sol\":1015:1025  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":1007:1035  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Smart Wallet.sol\":1007:1054  payable(msg.sender).transfer(_amount * 1 ether) */\n      0x08fc\n        /* \"Smart Wallet.sol\":1046:1053  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Smart Wallet.sol\":1036:1043  _amount */\n      dup4\n        /* \"Smart Wallet.sol\":1036:1053  _amount * 1 ether */\n      mul\n        /* \"Smart Wallet.sol\":1007:1054  payable(msg.sender).transfer(_amount * 1 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n        /* \"Smart Wallet.sol\":1088:1095  _amount */\n      dup1\n        /* \"Smart Wallet.sol\":1065:1072  Balance */\n      0x00\n        /* \"Smart Wallet.sol\":1065:1084  Balance[msg.sender] */\n      dup1\n        /* \"Smart Wallet.sol\":1073:1083  msg.sender */\n      caller\n        /* \"Smart Wallet.sol\":1065:1084  Balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Smart Wallet.sol\":1065:1095  Balance[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Smart Wallet.sol\":1115:1122  _amount */\n      dup1\n        /* \"Smart Wallet.sol\":1106:1111  funds */\n      0x02\n      0x00\n        /* \"Smart Wallet.sol\":1106:1122  funds -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Smart Wallet.sol\":612:1130  function WithdrawMoney(uint _amount) payable public {\r... */\n      pop\n      jump\t// out\n    stop\n    data_4d1196ed490f5543b658f98eb35ee12d8f8caae3c07eb3daa683bcdca46d2b36 4e6f7420656e6f7567682072656d61696e696e67206d6f6e6579206f6e2077616c6c6574\n\n    auxdata: 0xa26469706673582212206e301b629b75e631ece94198b8aa98398814f04d606c2e675d8cfbf5386d3cbf64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610579806100616000396000f3fe6080604052600436106100385760003560e01c806319e5bf3a146100b15780638da5cb5b146100de578063fb8299b01461011f57610039565b5b7fc3c5fffb3c0f24b3bc590d2c32d22157634000403cdc35bbe4169569797976e633670de0b6b3a7640000348161006c57fe5b04604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a134600260008282540192505081905550005b3480156100bd57600080fd5b506100c661014d565b60405180821515815260200191505060405180910390f35b3480156100ea57600080fd5b506100f3610219565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61014b6004803603602081101561013557600080fd5b810190808035906020019092919050505061023f565b005b600060146000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600254600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360006101000a81548160ff0219169083151502179055905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60011515600360009054906101000a900460ff161515146102c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f596f7520617265206e6f7420726567697374657265640000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561035f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806105206024913960400191505060405180910390fd5b8060025410156103d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420656e6f7567682066756e6473206f6e2077616c6c657400000000000081525060200191505060405180910390fd5b600254816002540311156103e757fe5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403111561046f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000083029081150290604051600060405180830381858888f193505050501580156104bf573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550806002600082825403925050819055505056fe4e6f7420656e6f7567682072656d61696e696e67206d6f6e6579206f6e2077616c6c6574a26469706673582212206e301b629b75e631ece94198b8aa98398814f04d606c2e675d8cfbf5386d3cbf64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x579 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19E5BF3A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xFB8299B0 EQ PUSH2 0x11F JUMPI PUSH2 0x39 JUMP JUMPDEST JUMPDEST PUSH32 0xC3C5FFFB3C0F24B3BC590D2C32D22157634000403CDC35BBE4169569797976E6 CALLER PUSH8 0xDE0B6B3A7640000 CALLVALUE DUP2 PUSH2 0x6C JUMPI INVALID JUMPDEST DIV PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x23F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520617265206E6F74207265676973746572656400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x520 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F7567682066756E6473206F6E2077616C6C6574000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x2 SLOAD SUB GT ISZERO PUSH2 0x3E7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB GT ISZERO PUSH2 0x46F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 DUP4 MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP INVALID 0x4E PUSH16 0x7420656E6F7567682072656D61696E69 PUSH15 0x67206D6F6E6579206F6E2077616C6C PUSH6 0x74A264697066 PUSH20 0x582212206E301B629B75E631ECE94198B8AA9839 DUP9 EQ CREATE 0x4D PUSH1 0x6C 0x2E PUSH8 0x5D8CFBF5386D3CBF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "27:1106:0:-:0;;;251:60;;;;;;;;;;291:10;283:5;;:18;;;;;;;;;;;;;;;;;;27:1106;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806319e5bf3a146100b15780638da5cb5b146100de578063fb8299b01461011f57610039565b5b7fc3c5fffb3c0f24b3bc590d2c32d22157634000403cdc35bbe4169569797976e633670de0b6b3a7640000348161006c57fe5b04604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a134600260008282540192505081905550005b3480156100bd57600080fd5b506100c661014d565b60405180821515815260200191505060405180910390f35b3480156100ea57600080fd5b506100f3610219565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61014b6004803603602081101561013557600080fd5b810190808035906020019092919050505061023f565b005b600060146000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600254600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360006101000a81548160ff0219169083151502179055905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60011515600360009054906101000a900460ff161515146102c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f596f7520617265206e6f7420726567697374657265640000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561035f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806105206024913960400191505060405180910390fd5b8060025410156103d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420656e6f7567682066756e6473206f6e2077616c6c657400000000000081525060200191505060405180910390fd5b600254816002540311156103e757fe5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403111561046f57fe5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000083029081150290604051600060405180830381858888f193505050501580156104bf573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550806002600082825403925050819055505056fe4e6f7420656e6f7567682072656d61696e696e67206d6f6e6579206f6e2077616c6c6574a26469706673582212206e301b629b75e631ece94198b8aa98398814f04d606c2e675d8cfbf5386d3cbf64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19E5BF3A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xFB8299B0 EQ PUSH2 0x11F JUMPI PUSH2 0x39 JUMP JUMPDEST JUMPDEST PUSH32 0xC3C5FFFB3C0F24B3BC590D2C32D22157634000403CDC35BBE4169569797976E6 CALLER PUSH8 0xDE0B6B3A7640000 CALLVALUE DUP2 PUSH2 0x6C JUMPI INVALID JUMPDEST DIV PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x23F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520617265206E6F74207265676973746572656400000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x520 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420656E6F7567682066756E6473206F6E2077616C6C6574000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x2 SLOAD SUB GT ISZERO PUSH2 0x3E7 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB GT ISZERO PUSH2 0x46F JUMPI INVALID JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 DUP4 MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP INVALID 0x4E PUSH16 0x7420656E6F7567682072656D61696E69 PUSH15 0x67206D6F6E6579206F6E2077616C6C PUSH6 0x74A264697066 PUSH20 0x582212206E301B629B75E631ECE94198B8AA9839 DUP9 EQ CREATE 0x4D PUSH1 0x6C 0x2E PUSH8 0x5D8CFBF5386D3CBF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "27:1106:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:46;377:10;401:7;389:9;:19;;;;;;363:46;;;;;;;;;;;;;;;;;;;;;;;;;;429:9;420:5;;:18;;;;;;;;;;;27:1106;454:150;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;98:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;612:518;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;454:150;489:4;528:2;506:7;:19;514:10;506:19;;;;;;;;;;;;;;;:24;;;;558:5;;541:7;:14;549:5;;;;;;;;;;;541:14;;;;;;;;;;;;;;;:22;;;;592:4;581:8;;:15;;;;;;;;;;;;;;;;;574:22;;454:150;:::o;98:28::-;;;;;;;;;;;;;:::o;612:518::-;695:4;683:16;;:8;;;;;;;;;;;:16;;;675:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:7;745;:19;753:10;745:19;;;;;;;;;;;;;;;;:30;;737:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:7;835:5;;:16;;827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:5;;908:7;900:5;;:15;:24;;893:32;;;;976:7;:19;984:10;976:19;;;;;;;;;;;;;;;;965:7;943;:19;951:10;943:19;;;;;;;;;;;;;;;;:29;:52;;936:60;;;;1015:10;1007:28;;:47;1046:7;1036;:17;1007:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:7;1065;:19;1073:10;1065:19;;;;;;;;;;;;;;;;:30;;;;;;;;;;;1115:7;1106:5;;:16;;;;;;;;;;;612:518;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "280200",
								"executionCost": "21184",
								"totalCost": "301384"
							},
							"external": {
								"": "22336",
								"Register()": "62902",
								"WithdrawMoney(uint256)": "infinite",
								"owner()": "1047"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1133,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 311,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 311,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 311,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 291,
									"end": 301,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 283,
									"end": 301,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1133,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e301b629b75e631ece94198b8aa98398814f04d606c2e675d8cfbf5386d3cbf64736f6c634300060c0033",
									".code": [
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "19E5BF3A"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH",
											"source": 0,
											"value": "FB8299B0"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "C3C5FFFB3C0F24B3BC590D2C32D22157634000403CDC35BBE4169569797976E6"
										},
										{
											"begin": 377,
											"end": 387,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 401,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 389,
											"end": 398,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 389,
											"end": 408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 389,
											"end": 408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 389,
											"end": 408,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 389,
											"end": 408,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 389,
											"end": 408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 408,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 409,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 438,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 1133,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 506,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 524,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 506,
											"end": 530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 530,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 549,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 541,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 563,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 541,
											"end": 563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 581,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 581,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 581,
											"end": 596,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 581,
											"end": 596,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 581,
											"end": 596,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 574,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 604,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 683,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 683,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 683,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 683,
											"end": 691,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 683,
											"end": 691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 683,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 683,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 683,
											"end": 699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "596F7520617265206E6F74207265676973746572656400000000000000000000"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 675,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 753,
											"end": 763,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 745,
											"end": 775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH data",
											"source": 0,
											"value": "4D1196ED490F5543B658F98EB35EE12D8F8CAAE3C07EB3DAA683BCDCA46D2B36"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 737,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 737,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 835,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 835,
											"end": 840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 835,
											"end": 851,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 835,
											"end": 851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7420656E6F7567682066756E6473206F6E2077616C6C6574000000000000"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 827,
											"end": 882,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 900,
											"end": 905,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 900,
											"end": 905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 900,
											"end": 915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 900,
											"end": 924,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 900,
											"end": 924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 893,
											"end": 925,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 893,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 984,
											"end": 994,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 976,
											"end": 995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 961,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 943,
											"end": 962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 943,
											"end": 962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 962,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 943,
											"end": 962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 943,
											"end": 972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 943,
											"end": 995,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 943,
											"end": 995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 936,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 936,
											"end": 996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 936,
											"end": 996,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 936,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 936,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1036,
											"end": 1043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 1130,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"4D1196ED490F5543B658F98EB35EE12D8F8CAAE3C07EB3DAA683BCDCA46D2B36": "4e6f7420656e6f7567682072656d61696e696e67206d6f6e6579206f6e2077616c6c6574"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Register()": "19e5bf3a",
							"WithdrawMoney(uint256)": "fb8299b0",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RecievedMoney\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Smart Wallet.sol\":\"SmartWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Smart Wallet.sol\":{\"keccak256\":\"0x66509bb98b33560dbfcfb57b3c19b0709983fba179051f28c4c2bb09600a0549\",\"urls\":[\"bzz-raw://7ad25dc61a744807749ec9cf8f6bd1f7b6321a39ce158c4aa826b6d5df36aa76\",\"dweb:/ipfs/QmbDakvcRHBbLCriqcRUkXBjuBJUbTNtZcboREXFgtoTUL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "Smart Wallet.sol:SmartWallet",
								"label": "Balance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "Smart Wallet.sol:SmartWallet",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 15,
								"contract": "Smart Wallet.sol:SmartWallet",
								"label": "funds",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "Smart Wallet.sol:SmartWallet",
								"label": "register",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Smart Wallet.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Smart Wallet.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Smart Wallet.sol:3:1: Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\ncontract SmartWallet {\n^ (Relevant source part starts here and spans across multiple lines).\nSmart Wallet.sol:20:5: The payable fallback function is defined here.\n    fallback() payable external {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 446,
						"file": "Smart Wallet.sol",
						"message": "The payable fallback function is defined here.",
						"start": 319
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1133,
					"file": "Smart Wallet.sol",
					"start": 27
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Smart Wallet.sol": {
				"ast": {
					"absolutePath": "Smart Wallet.sol",
					"exportedSymbols": {
						"SmartWallet": [
							142
						]
					},
					"id": 143,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "SmartWallet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "Balance",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 142,
									"src": "57:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "65:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "57:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "76:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 142,
									"src": "98:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "98:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "RecievedMoney",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "155:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "173:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "154:32:0"
									},
									"src": "135:52:0"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "funds",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 142,
									"src": "195:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "195:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "register",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 142,
									"src": "222:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "222:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "272:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "283:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "291:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "291:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "283:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "283:18:0"
											}
										]
									},
									"documentation": null,
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:0"
									},
									"scope": 142,
									"src": "251:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "347:99:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "377:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "377:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "389:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "389:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "401:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "389:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 29,
														"name": "RecievedMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "363:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "363:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "EmitStatement",
												"src": "358:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "funds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "420:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 39,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "429:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "429:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "420:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "420:18:0"
											}
										]
									},
									"documentation": null,
									"id": 44,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:0"
									},
									"scope": 142,
									"src": "319:127:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "495:109:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 49,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 52,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "514:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "506:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3230",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "528:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "506:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "506:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 56,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 58,
														"indexExpression": {
															"argumentTypes": null,
															"id": 57,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "funds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "558:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "541:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "541:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "592:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "581:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 65,
												"nodeType": "Return",
												"src": "574:22:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "19e5bf3a",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Register",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "489:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "488:6:0"
									},
									"scope": 142,
									"src": "454:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "664:466:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "register",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "683:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "695:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "683:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520617265206e6f742072656769737465726564",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "701:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a89cf242b98ec1123c42904dc6010ecee5947c8caa64990cfcfd7dc7774a9f96",
																"typeString": "literal_string \"You are not registered\""
															},
															"value": "You are not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a89cf242b98ec1123c42904dc6010ecee5947c8caa64990cfcfd7dc7774a9f96",
																"typeString": "literal_string \"You are not registered\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "675:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 80,
																	"name": "Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 83,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 81,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "753:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "753:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "745:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "768:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "745:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420656e6f7567682072656d61696e696e67206d6f6e6579206f6e2077616c6c6574",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "777:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d1196ed490f5543b658f98eb35ee12d8f8caae3c07eb3daa683bcdca46d2b36",
																"typeString": "literal_string \"Not enough remaining money on wallet\""
															},
															"value": "Not enough remaining money on wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d1196ed490f5543b658f98eb35ee12d8f8caae3c07eb3daa683bcdca46d2b36",
																"typeString": "literal_string \"Not enough remaining money on wallet\""
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "737:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "funds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "835:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "835:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420656e6f7567682066756e6473206f6e2077616c6c6574",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "853:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ae529770ddc390aca8092fa8a966ff4ce194aed61b8681df5d34998bb114041",
																"typeString": "literal_string \"Not enough funds on wallet\""
															},
															"value": "Not enough funds on wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ae529770ddc390aca8092fa8a966ff4ce194aed61b8681df5d34998bb114041",
																"typeString": "literal_string \"Not enough funds on wallet\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "827:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "funds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "900:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "funds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "900:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 96,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "893:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "893:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 105,
																		"name": "Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 108,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 106,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "951:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "951:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "943:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "965:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "943:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "976:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 114,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 112,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "984:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "984:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "976:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "943:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 104,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "936:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "936:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 124,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "1036:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1046:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "1036:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 120,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1015:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1015:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1007:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1007:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1007:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1007:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1007:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1007:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 132,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1073:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1073:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1065:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 133,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1065:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1065:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 136,
														"name": "funds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1106:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 137,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1106:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1106:16:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fb8299b0",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "WithdrawMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 141,
												"src": "635:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "634:14:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:0:0"
									},
									"scope": 142,
									"src": "612:518:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 143,
							"src": "27:1106:0"
						}
					],
					"src": "0:1135:0"
				},
				"id": 0
			}
		}
	}
}